@page "/tasks"
@inject HttpClient Http
@inject TaskService taskService

<h3>Tasks</h3>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="OnInitializedAsync">Refresh</button>
</div>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else if (tasks.Count == 0)
{
    <p>No tasks found for this user.</p>
}
else
{
    <ul>
        @foreach (var task in tasks)
        {
            <li>
                @if (task.IsDone)
                {
                    <span class="bi bi-check-circle" aria-hidden="true"></span> 
                }
                else
                {
                    <span class="bi bi-clock" aria-hidden="true"></span> 
                }
                <span>@task.Text</span>
            </li>
        }
    </ul>
 }

@code {
    private List<TaskToDo> tasks;

    protected override async Task OnInitializedAsync()
    {
        tasks = await taskService.GetTasks();
    }

    private async Task RefreshTasks() => tasks = await taskService.GetTasks();
}
