@page "/register"
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject RegisterService registerService


<!-- Register form-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration Form</title>
    <style>
        #conteneurForm {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 16px;
            box-sizing: border-box;
        }

        button {
            background-color: #4caf50;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
   <h1 class="mb-4">Register</h1>
    <div id="conteneurForm">
        <EditForm Model="@registerModel" OnSubmit="HandleRegister">
            <label for="name">Name:</label>
            <InputText @bind-Value="registerModel.UserName" required />

            <label for="password">Password:</label>
            <InputText type="password" @bind-Value="registerModel.Password" required />

            <label for="email">Email:</label>
            <InputText type="email" @bind-Value="registerModel.Email" required />
            <button type="submit">Register</button>

        </EditForm>
    </div>
    <br />
    <div>
        @if (!string.IsNullOrEmpty(message))
        {
            if (erreur)
            {
                <p class="text-danger">@message</p>
            }
            else
            {
                <p class="text-black">@message</p>
            }
        }
    </div>

</body>
</html>


@code {
    private RegisterModel registerModel = new RegisterModel();
    private string message;
    Boolean erreur = false;

    private async void HandleRegister()
    {
        int user = await registerService.RegisterUser(registerModel.UserName, registerModel.Password, registerModel.Email);
        if (user == 0)
        {
            //var userClaim = await ((CustomAuthenticationStateProvider)authStateProvider).MarkUserAsAuthenticated(user);

            //NavigationManager.NavigateTo("/");
            message = "User créé";
        }
        else
        {
            Console.WriteLine("Le User existe déjà");
            message = "Le User existe déjà";
            erreur = true;
        }
        StateHasChanged();
        return;
    }
    private class RegisterModel
    {
        public string UserName { get; set; } = "";
        public string Password { get; set; } = "";
        public string Email { get; set; } = "";

    }
}
